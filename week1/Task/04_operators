## 🔢 **Operators in Python**

Operators in Python are **special symbols** used to perform operations on variables and values. Python supports a wide variety of operators grouped into several categories:

---

### ✅ 1. **Arithmetic Operators**

Used for basic mathematical operations:

| Operator | Description         | Example  | Result |
| -------- | ------------------- | -------- | ------ |
| `+`      | Addition            | `3 + 2`  | `5`    |
| `-`      | Subtraction         | `5 - 2`  | `3`    |
| `*`      | Multiplication      | `4 * 2`  | `8`    |
| `/`      | Division            | `6 / 2`  | `3.0`  |
| `//`     | Floor Division      | `7 // 2` | `3`    |
| `%`      | Modulus (remainder) | `7 % 2`  | `1`    |
| `**`     | Exponentiation      | `2 ** 3` | `8`    |

---

### ✅ 2. **Assignment Operators**

Used to assign values to variables:

| Operator | Description             | Example   |
| -------- | ----------------------- | --------- |
| `=`      | Assign                  | `x = 5`   |
| `+=`     | Add and assign          | `x += 3`  |
| `-=`     | Subtract and assign     | `x -= 2`  |
| `*=`     | Multiply and assign     | `x *= 2`  |
| `/=`     | Divide and assign       | `x /= 2`  |
| `//=`    | Floor divide and assign | `x //= 2` |
| `%=`     | Modulus and assign      | `x %= 2`  |
| `**=`    | Exponent and assign     | `x **= 2` |

---

### ✅ 3. **Comparison (Relational) Operators**

Used to compare values and return Boolean results:

| Operator | Description              | Example  | Result  |
| -------- | ------------------------ | -------- | ------- |
| `==`     | Equal to                 | `3 == 3` | `True`  |
| `!=`     | Not equal to             | `4 != 3` | `True`  |
| `>`      | Greater than             | `5 > 2`  | `True`  |
| `<`      | Less than                | `3 < 2`  | `False` |
| `>=`     | Greater than or equal to | `4 >= 4` | `True`  |
| `<=`     | Less than or equal to    | `2 <= 1` | `False` |

---

### ✅ 4. **Logical Operators**

Used to combine multiple conditions:

| Operator | Description           | Example          | Result  |
| -------- | --------------------- | ---------------- | ------- |
| `and`    | True if both are True | `True and False` | `False` |
| `or`     | True if any is True   | `True or False`  | `True`  |
| `not`    | Inverts the result    | `not True`       | `False` |

---

### ✅ 5. **Bitwise Operators**

Operate on binary numbers:

| Operator | Description | Example  | Result |     |     |
| -------- | ----------- | -------- | ------ | --- | --- |
| `&`      | AND         | `5 & 3`  | `1`    |     |     |
| \`       | \`          | OR       | \`5    | 3\` | `7` |
| `^`      | XOR         | `5 ^ 3`  | `6`    |     |     |
| `~`      | NOT         | `~5`     | `-6`   |     |     |
| `<<`     | Left shift  | `5 << 1` | `10`   |     |     |
| `>>`     | Right shift | `5 >> 1` | `2`    |     |     |

---

### ✅ 6. **Membership Operators**

Test if a sequence contains a value:

| Operator | Description             | Example            | Result |
| -------- | ----------------------- | ------------------ | ------ |
| `in`     | Present in sequence     | `'a' in 'cat'`     | `True` |
| `not in` | Not present in sequence | `'x' not in 'cat'` | `True` |

---

### ✅ 7. **Identity Operators**

Compare memory locations (object identity):

| Operator | Description         | Example      | Result       |
| -------- | ------------------- | ------------ | ------------ |
| `is`     | Same object         | `x is y`     | `True/False` |
| `is not` | Not the same object | `x is not y` | `True/False` |

---

### 📌 **Conclusion**

Python operators are the foundation for expressions and logic in any program. Mastering them is key to writing efficient and clear Python code.

---

## ✅ 1. **Practice Exercises with Solutions**

```python
# ✅ Arithmetic Operators
a = 10
b = 3

print(a + b)   # Addition → 13
print(a - b)   # Subtraction → 7
print(a * b)   # Multiplication → 30
print(a / b)   # Division → 3.333...
print(a % b)   # Modulus → 1
print(a ** b)  # Exponent → 1000
print(a // b)  # Floor Division → 3

# ✅ Assignment Operators
x = 5
x += 3
print(x)  # 8
x *= 2
print(x)  # 16

# ✅ Comparison Operators
print(a == b)   # False
print(a != b)   # True
print(a > b)    # True
print(a <= b)   # False

# ✅ Logical Operators
print(a > 5 and b < 5)   # True
print(a < 5 or b == 3)   # True
print(not(a == b))       # True

# ✅ Identity Operators
x = [1, 2]
y = [1, 2]
z = x
print(x is y)   # False (different objects)
print(x is z)   # True
print(x is not y) # True

# ✅ Membership Operators
fruits = ['apple', 'banana']
print('apple' in fruits)     # True
print('grape' not in fruits) # True

# ✅ Bitwise Operators
a = 5   # 0101
b = 3   # 0011

print(a & b)  # AND → 1
print(a | b)  # OR  → 7
print(a ^ b)  # XOR → 6
print(~a)     # NOT → -6
print(a << 1) # Left Shift → 10
print(a >> 1) # Right Shift → 2
```

---

## ❓ 2. **MCQs and Interview Questions**

### 🧠 MCQs:

**Q1.** What is the output of `3 ** 2`?
A. 5
B. 6
C. 9
D. 8
✅ **Answer:** C

---

**Q2.** Which of the following is a logical operator in Python?
A. `&`
B. `&&`
C. `and`
D. `add`
✅ **Answer:** C

---

**Q3.** What will be the output?

```python
x = 10
y = 20
print(x is y)
```

A. True
B. False
C. Error
D. 10
✅ **Answer:** B

---

**Q4.** What is the output of `10 // 3`?
A. 3.33
B. 3
C. 4
D. 0
✅ **Answer:** B

---

**Q5.** Which operator is used to test if a value is present in a list?
A. `is`
B. `==`
C. `in`
D. `with`
✅ **Answer:** C

---

### 💬 Interview-Style Questions:

1. **What is the difference between `==` and `is`?**
   ✅ `==` checks value equality, `is` checks object identity.

2. **What is the use of floor division (`//`)?**
   ✅ Returns the largest integer less than or equal to the result.

3. **Explain the `not` operator in Python.**
   ✅ It inverts the Boolean value (`True` becomes `False`).

4. **How does the `^` operator work?**
   ✅ Performs bitwise XOR between two integers.

5. **Give an example of a membership operator.**
   ✅ `'a' in ['a', 'b']` returns `True`.

---

## 📝 3. **Quiz Format (Python Operators)**

```
📝 PYTHON OPERATORS QUIZ ⚙️

1. What does `a += 5` mean?
   a) a = a + 5
   b) a = 5
   c) a == 5
   d) Error

2. What is the result of `4 ** 2`?
   a) 6
   b) 8
   c) 16
   d) 4

3. Which one is a comparison operator?
   a) and
   b) or
   c) ==
   d) not

4. What is the result of `7 // 2`?
   a) 3.5
   b) 4
   c) 3
   d) 2

5. Which of these checks whether two variables refer to the same object?
   a) ==
   b) is
   c) equals
   d) match

🎯 Answers:
1 → a
2 → c
3 → c
4 → b
5 → b
```

---

## 📘 4. **Operator Summary Table**

| Operator Type | Operators                | Example           | Result / Use Case    |                 |
| ------------- | ------------------------ | ----------------- | -------------------- | --------------- |
| Arithmetic    | +, -, \*, /, %, \*\*, // | `10 % 3`          | Remainder → 1        |                 |
| Assignment    | =, +=, -=, \*=, /=       | `x += 2`          | Increment x by 2     |                 |
| Comparison    | ==, !=, >, <, >=, <=     | `x > y`           | True/False           |                 |
| Logical       | and, or, not             | `x > 2 and y < 5` | Logical decisions    |                 |
| Identity      | is, is not               | `x is y`          | Same memory location |                 |
| Membership    | in, not in               | `'a' in list`     | True if found        |                 |
| Bitwise       | &,                       | , ^, \~, <<, >>   | `5 & 3`              | Bitwise AND = 1 |

---
